# This file is auto-generated.
# Do not modify directly.
# ---
networks:
  localdockerstacknetwork:
    driver: bridge
services:
  queueservice819a1fca:
    image: softwaremill/elasticmq-native:latest
    command: /bin/sh -c "echo 'include
      classpath(\"application.conf\")\n\nnode-address {\n    protocol =
      http\n    host = \"*\"\n    port = 9324\n    context-path =
      \"\"\n}\n\nrest-sqs {\n    enabled = true\n    bind-port =
      9324\n    bind-hostname = \"0.0.0.0\"\n    sqs-limits =
      strict\n}\n\nqueues {\n    e6f21583 {\n        defaultVisibilityTimeout =
      10 seconds\n        delay = 0 seconds\n        receiveMessageWait = 0
      seconds\n    }\n}' > /elastic.conf && java -Dconfig.file=/elastic.conf
      -jar /opt/elasticmq-server.jar"
    privileged: false
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - 9324:9324
    networks:
      localdockerstacknetwork:
        aliases:
          - sqs.local
  storagebucketa8622c71:
    image: minio/minio:latest
    command: -c 'mkdir -p /data/46b6c6fb && /usr/bin/minio server /data'
    entrypoint: /bin/sh
    privileged: false
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MINIO_ROOT_USER: test
      MINIO_ROOT_PASSWORD: test
    ports:
      - 9000:9000
    volumes:
      - type: bind
        source: ../.s3/46b6c6fb
        target: /data
    networks:
      localdockerstacknetwork:
        aliases:
          - s3.local
  postgreslocal:
    image: postgres:latest
    command: postgres
    privileged: false
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_DB: wavekb-local
      POSTGRES_USER: wavekb
      POSTGRES_PASSWORD: local
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - 5432:5432
    volumes:
      - type: bind
        source: ../.postgres
        target: /var/lib/postgresql/data
    networks:
      localdockerstacknetwork:
        aliases:
          - postgres.local
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U wavekb
      interval: 10s
      timeout: 5s
      retries: 5
  lambdaserveremulator:
    working_dir: /app
    image: public.ecr.aws/sam/build-nodejs22.x:latest
    command: sam local start-lambda -t /app/cdk.out/MainStack.template.json --host
      0.0.0.0 --port 3001
    privileged: false
    deploy:
      mode: replicated
      replicas: 1
    environment:
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_REGION: us-east-1
    ports:
      - 3001:3001
    volumes:
      - type: bind
        source: ..
        target: /app
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
    networks:
      localdockerstacknetwork:
        aliases:
          - lambda.local
    healthcheck:
      test:
        - CMD
        - sam
        - local
        - invoke
        - LocalHealthCheck
        - --event
        - "{}"
        - --endpoint-url
        - http://lambda.local:3001
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
  stepfunctionsemulator:
    image: amazon/aws-stepfunctions-local:latest
    privileged: false
    deploy:
      mode: replicated
      replicas: 1
    environment:
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_REGION: us-east-1
      LAMBDA_ENDPOINT: http://lambda.local:3001
    ports:
      - 8083:8083
    healthcheck:
      test:
        - CMD-SHELL
        - curl -f http://localhost:8083 || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
  stepfunctionworkflowec512ce6:
    image: amazon/aws-cli:latest
    command: stepfunctions create-state-machine --endpoint-url
      http://stepfunctions.local:8083 --region us-east-1 --definition
      '{"Type":"Pass","Next":"Nextec512ce6"}' --name StateMachineec512ce6
      --role-arn arn:aws:iam::123456789012:role/DummyRole
    privileged: false
    deploy:
      mode: replicated
      replicas: 1
    environment:
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_REGION: us-east-1
    networks:
      localdockerstacknetwork:
        aliases:
          - stepfunctions.local
    depends_on:
      stepfunctionsemulator:
        condition: service_started
      postgreslocal:
        condition: service_started
      queueservice819a1fca:
        condition: service_started
      storagebucketa8622c71:
        condition: service_started
  triggerscript4f77d86b:
    working_dir: /b635197f
    image: node:alpine
    command: -e 'require("./index.ts").handler()'
    privileged: false
    restart: no
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - type: bind
        source: ../lambdas/seed
        target: /b635197f
    depends_on:
      postgreslocal:
        condition: service_healthy
  nextjslocal:
    image: node:alpine
    user: "1000"
    command: sh -c 'cd /app && npm run dev'
    privileged: false
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DEBUG: wavekb*
      PORT: "4000"
      QUEUE_URL: http://sqs.local:9324/e6f21583
      STORAGE_URL: http://s3.local:9000/46b6c6fb
      POSTGRES_URL: postgres://wavekb:local@postgres.local/wavekb-local
      FRAMEWORK_ENVIRONMENT: development
    ports:
      - 4000:4000
    volumes:
      - type: bind
        source: ../app
        target: /app
    networks:
      localdockerstacknetwork:
        aliases:
          - nextjs.local
    healthcheck:
      test:
        - CMD-SHELL
        - curl --fail http://localhost:4000/api/healthcheck || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      triggerscript4f77d86b:
        condition: service_completed_successfully
      stepfunctionworkflowec512ce6:
        condition: service_started
name: localdockerstackproject
